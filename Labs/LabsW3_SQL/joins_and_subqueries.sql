select title, inventory_id
from film 
inner join inventory
on film.film_id = inventory.film_id;

select title, inventory_id, inventory.store_id
from film
inner join inventory
on film.film_id = inventory.film_id
inner join store
on inventory.store_id = store.store_id;

select title, name
from film
inner join film_category
on film.film_id = film_category.film_id
inner join category
on category.category_id = film_category.category_id;

# LAB

#1.
select count(film_id), name
from film_category
inner join category
on category.category_id = film_category.category_id        # alternatively USING(category_id)
group by name;

#2 Retrieve the store ID, city, and country for each store.

select store_id, city, country
from store
inner join address
on store.address_id = address.address_id
inner join city
on address.city_id = city.city_id
inner join country
on city.country_id = country.country_id;

# 3 Calculate the total revenue generated by each store in dollars

select store.store_id, (sum(amount)+'$') as total_revenue_in_$
from store
inner join staff
on staff.store_id = store.store_id
inner join payment
on staff.staff_id = payment.staff_id
group by store_id;


# 4 Determine the average running time of films for each category

select category.category_id, avg(length)
from category 
inner join film_category
on category.category_id = film_category.category_id 
inner join film 
on film.film_id = film_category.film_id
group by category_id;


# 5 Identify the film categories with the longest average running time.

select category.category_id, avg(length)
from category 
inner join film_category
on category.category_id = film_category.category_id 
inner join film 
on film.film_id = film_category.film_id
group by category_id
order by avg(length) desc
limit 1;

# using joins

use sakila;   

select first_name, last_name
from actor
where actor_id in (select actor_id
                from film_actor
                where film_id = (select film_id
								from film
								where title = "Hunchback Impossible"));

select rental_id
from rental 
where inventory_id IN (select inventory_id
						from inventory
							where film_id = 2);

select rental_id
from rental 
where inventory_id IN (select inventory_id
						from inventory
							where film_id = (select film_id
											from film 
                                            where title = "Hunchback Impossible"));
                                            
 # LAB 2
 # 1 Determine the number of copies of the film "Hunchback Impossible" that exist in the inventory system
 
select count(inventory_id)
from inventory
where film_id = (select film_id
				from film 
				where title = "Hunchback Impossible");
                
# 2 List all films whose length is longer than the average length of all the films in the Sakila database

select title, length
from film
where length > (select avg(length)
				from film);
                
select avg(length)
from film;               

# 3 Use a subquery to display all actors who appear in the film "Alone Trip"

select first_name, last_name
from actor
where actor_id in (select actor_id
					from film_actor
                    where film_id in (select film_id
									from film
									where title = "Alone Trip"));

# 4 Sales have been lagging among young families, and you want to target family movies for a promotion. 
# Identify all movies categorized as family films.
select title
from film
where film_id in (select film_id
				from film_category
				where category_id in (select category_id
									from category
									 where name = "Family"));
